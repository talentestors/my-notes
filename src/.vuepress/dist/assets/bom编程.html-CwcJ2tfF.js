import{_ as s}from"./plugin-vue_export-helper-DlAUqK2U.js";import{ah as a,ap as p,ai as t}from"./app-CAqLFJSb.js";const e={};function c(l,n){return t(),a("div",null,n[0]||(n[0]=[p(`<h2 id="一、概述" tabindex="-1"><a class="header-anchor" href="#一、概述"><span>一、概述</span></a></h2><p>BOM 是浏览器对象模型。</p><p>BOM 提供了独立于内容 而与浏览器窗口进行交互的对象；</p><p>BOM 的核心对象是 window；</p><p>BOM 由一系列相关的对象构成，并且每个对象都提供了很多方法与属性；</p><p>打开浏览器，F12 打开调试窗口，console 里输入 window，就能看到这个对象。里边有很多的方法和属性，能够帮助我们查看和浏览器相关的一些内容，比如浏览器的版本啦（navigator）、浏览的历时记录啦（history）、网站的地址信息啦（location），和屏幕相关的内容啦（带 screende）等等，自己可以浏览一下即可。</p><h2 id="二、常用方法" tabindex="-1"><a class="header-anchor" href="#二、常用方法"><span>二、常用方法</span></a></h2><blockquote><p>回调函数</p></blockquote><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js"><pre><code class="language-javascript"><span class="line"><span class="token comment">//js函数非常灵活，定义了参数传什么都行</span></span>
<span class="line"><span class="token keyword">var</span> <span class="token function-variable function">callback</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">fun</span><span class="token punctuation">)</span><span class="token punctuation">{</span></span>
<span class="line">    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>fun<span class="token punctuation">)</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"><span class="token function">callback</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token function">callback</span><span class="token punctuation">(</span><span class="token string">&quot;123&quot;</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token function">callback</span><span class="token punctuation">(</span> <span class="token punctuation">{</span><span class="token literal-property property">name</span><span class="token operator">:</span><span class="token string">&#39;zhangnan&#39;</span><span class="token punctuation">}</span> <span class="token punctuation">)</span></span>
<span class="line"><span class="token function">callback</span><span class="token punctuation">(</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">]</span> <span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">//实际上传什么，就要把这个参数当成什么来用</span></span>
<span class="line"><span class="token comment">//要是传个方法就要在方法里找个合适的地方调用一下</span></span>
<span class="line"><span class="token keyword">var</span> <span class="token function-variable function">callback</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">fun</span><span class="token punctuation">)</span><span class="token punctuation">{</span></span>
<span class="line">    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>fun<span class="token punctuation">)</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">var</span> <span class="token function-variable function">test</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">fun</span><span class="token punctuation">)</span><span class="token punctuation">{</span></span>
<span class="line">    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;before&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token function">fun</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;after&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">//你知道需要传方法却传了一个数字，更定不能调用，就会报错</span></span>
<span class="line"><span class="token function">test</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token constant">VM1038</span><span class="token operator">:</span><span class="token number">2</span> before</span>
<span class="line"><span class="token constant">VM1038</span><span class="token operator">:</span><span class="token number">3</span> Uncaught TypeError<span class="token operator">:</span> fun is not a <span class="token keyword">function</span></span>
<span class="line">    at <span class="token function">test</span> <span class="token punctuation">(</span><span class="token operator">&lt;</span>anonymous<span class="token operator">&gt;</span><span class="token operator">:</span><span class="token number">3</span><span class="token operator">:</span><span class="token number">5</span><span class="token punctuation">)</span></span>
<span class="line">    at <span class="token operator">&lt;</span>anonymous<span class="token operator">&gt;</span><span class="token operator">:</span><span class="token number">1</span><span class="token operator">:</span><span class="token number">1</span></span>
<span class="line">test @ <span class="token constant">VM1038</span><span class="token operator">:</span><span class="token number">3</span></span>
<span class="line"><span class="token punctuation">(</span>anonymous<span class="token punctuation">)</span> @ <span class="token constant">VM1060</span><span class="token operator">:</span><span class="token number">1</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span class="token keyword">var</span> <span class="token function-variable function">callback</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span></span>
<span class="line">    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;I am callback!&quot;</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"><span class="token function">test</span><span class="token punctuation">(</span>callback<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">//结果</span></span>
<span class="line"><span class="token constant">VM1038</span><span class="token operator">:</span><span class="token number">2</span> before</span>
<span class="line"><span class="token constant">VM1151</span><span class="token operator">:</span><span class="token number">2</span> <span class="token constant">I</span> am callback<span class="token operator">!</span></span>
<span class="line"><span class="token constant">VM1038</span><span class="token operator">:</span><span class="token number">4</span> after</span>
<span class="line"></span>
<span class="line"><span class="token comment">//callback就是个方法的名字</span></span>
<span class="line"><span class="token keyword">var</span> <span class="token function-variable function">callback</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">data</span><span class="token punctuation">)</span><span class="token punctuation">{</span></span>
<span class="line">    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;I am callback!&quot;</span><span class="token operator">+</span>data<span class="token punctuation">)</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">var</span> <span class="token function-variable function">test</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">fun</span><span class="token punctuation">)</span><span class="token punctuation">{</span></span>
<span class="line">    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;before&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token function">fun</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;after&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">var</span> <span class="token function-variable function">test</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">fun</span><span class="token punctuation">)</span><span class="token punctuation">{</span></span>
<span class="line">    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;before&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token keyword">var</span> i <span class="token operator">=</span> <span class="token number">10</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token function">fun</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;after&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"><span class="token comment">//可以直接传名字</span></span>
<span class="line"><span class="token function">test</span><span class="token punctuation">(</span>callback<span class="token punctuation">)</span></span>
<span class="line"><span class="token constant">VM1296</span><span class="token operator">:</span><span class="token number">2</span> before</span>
<span class="line"><span class="token constant">VM1255</span><span class="token operator">:</span><span class="token number">2</span> <span class="token constant">I</span> am callback<span class="token operator">!</span><span class="token number">10</span></span>
<span class="line"><span class="token constant">VM1296</span><span class="token operator">:</span><span class="token number">5</span> after</span>
<span class="line"></span>
<span class="line"><span class="token comment">//也能直接传个方法体进去</span></span>
<span class="line"><span class="token function">test</span><span class="token punctuation">(</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">data</span><span class="token punctuation">)</span><span class="token punctuation">{</span></span>
<span class="line">    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;I am callback!&quot;</span><span class="token operator">+</span>data<span class="token punctuation">)</span></span>
<span class="line"><span class="token punctuation">}</span> <span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token constant">VM1296</span><span class="token operator">:</span><span class="token number">2</span> before</span>
<span class="line"><span class="token constant">VM1363</span><span class="token operator">:</span><span class="token number">2</span> <span class="token constant">I</span> am callback<span class="token operator">!</span><span class="token number">10</span></span>
<span class="line"><span class="token constant">VM1296</span><span class="token operator">:</span><span class="token number">5</span> after</span>
<span class="line"></span>
<span class="line"><span class="token comment">//直接调用方法体也行</span></span>
<span class="line"><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span></span>
<span class="line">    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token number">123</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token constant">VM1427</span><span class="token operator">:</span><span class="token number">2</span> <span class="token number">123</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">var</span> <span class="token function-variable function">a</span>  <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span></span>
<span class="line">    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token number">123</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"><span class="token comment">//拿名字调用也行</span></span>
<span class="line"><span class="token function">a</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token constant">VM1452</span><span class="token operator">:</span><span class="token number">2</span> <span class="token number">123</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_1、settimeout" tabindex="-1"><a class="header-anchor" href="#_1、settimeout"><span>1、setTimeout</span></a></h3><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js"><pre><code class="language-javascript"><span class="line"><span class="token comment">//一次性定时器，会在多少毫秒后执行这个函数</span></span>
<span class="line"><span class="token comment">//里边的是匿名函数，也叫回调函数（就是等过了两秒后回过头来再调用这个函数）</span></span>
<span class="line"><span class="token comment">//返回值是个定时器，这个方法是在未来去执行某个函数</span></span>
<span class="line"><span class="token keyword">var</span> timer <span class="token operator">=</span> <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token number">123</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">2000</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">//如果时间未到，不想让他执行了，就需要取消这个定时器</span></span>
<span class="line"><span class="token function">clearTimeout</span><span class="token punctuation">(</span>timer<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2、setinterval" tabindex="-1"><a class="header-anchor" href="#_2、setinterval"><span>2、setInterval</span></a></h3><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js"><pre><code class="language-javascript"><span class="line"><span class="token comment">//周期性定时器，会每隔多少毫秒后执行这个函数</span></span>
<span class="line"><span class="token comment">//里边的是匿名函数，也叫回调函数（就是等过了两秒后回过头来再调用这个函数）</span></span>
<span class="line"><span class="token comment">//返回值是个定时器，这个方法是在未来去执行某个函数</span></span>
<span class="line"><span class="token keyword">var</span> timer <span class="token operator">=</span> <span class="token function">setInterval</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token number">123</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">2000</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">//如果时间未到，或者中途不想让他执行了，就需要取消这个定时器</span></span>
<span class="line"><span class="token function">clearInterval</span><span class="token punctuation">(</span>timer<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_3、浏览器自带小型数据库" tabindex="-1"><a class="header-anchor" href="#_3、浏览器自带小型数据库"><span>3、浏览器自带小型数据库</span></a></h3><p>为每一个网址提供两个小型数据库</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js"><pre><code class="language-javascript"><span class="line"><span class="token comment">//localStorage只要不人为删除，会浏览器被删除数据会一直在</span></span>
<span class="line"><span class="token comment">//增加或修改一个</span></span>
<span class="line">window<span class="token punctuation">.</span>localStorage<span class="token punctuation">.</span><span class="token function">setItem</span><span class="token punctuation">(</span><span class="token string">&quot;name&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;lucy&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token comment">//获取</span></span>
<span class="line">window<span class="token punctuation">.</span>localStorage<span class="token punctuation">.</span><span class="token function">getItem</span><span class="token punctuation">(</span><span class="token string">&quot;name&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token comment">//删除一个</span></span>
<span class="line">window<span class="token punctuation">.</span>localStorage<span class="token punctuation">.</span><span class="token function">removeItem</span><span class="token punctuation">(</span><span class="token string">&quot;name&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token comment">//清空</span></span>
<span class="line">window<span class="token punctuation">.</span>localStorage<span class="token punctuation">.</span><span class="token function">clear</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">//sessionStorage网页被关闭就没有了</span></span>
<span class="line"><span class="token comment">//增加或修改一个</span></span>
<span class="line">window<span class="token punctuation">.</span>sessionStorage<span class="token punctuation">.</span><span class="token function">setItem</span><span class="token punctuation">(</span><span class="token string">&quot;name&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;lucy&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token comment">//获取</span></span>
<span class="line">window<span class="token punctuation">.</span>sessionStorage<span class="token punctuation">.</span><span class="token function">getItem</span><span class="token punctuation">(</span><span class="token string">&quot;name&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token comment">//删除一个</span></span>
<span class="line">window<span class="token punctuation">.</span>sessionStorage<span class="token punctuation">.</span><span class="token function">removeItem</span><span class="token punctuation">(</span><span class="token string">&quot;name&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token comment">//清空</span></span>
<span class="line">window<span class="token punctuation">.</span>sessionStorage<span class="token punctuation">.</span><span class="token function">clear</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_4、弹窗其实没求用" tabindex="-1"><a class="header-anchor" href="#_4、弹窗其实没求用"><span>4、弹窗其实没求用</span></a></h3><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js"><pre><code class="language-javascript"><span class="line"><span class="token comment">//弹个提示窗口，调试也不要用，不优雅</span></span>
<span class="line"><span class="token function">alert</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">//弹出确认框</span></span>
<span class="line"><span class="token comment">//点击确定就是true 点击否就是false</span></span>
<span class="line"><span class="token keyword">var</span> flag <span class="token operator">=</span> <span class="token function">confirm</span><span class="token punctuation">(</span><span class="token string">&quot;您确定要退出吗?&quot;</span><span class="token punctuation">)</span></span>
<span class="line">console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>flag<span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">//弹出信息框</span></span>
<span class="line"><span class="token comment">//输入信息后点击确定返回填的内容，点击取消返回none</span></span>
<span class="line"><span class="token keyword">var</span> message <span class="token operator">=</span> <span class="token function">prompt</span><span class="token punctuation">(</span><span class="token string">&quot;请填写您的手机号！&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>message<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token constant">VM3797</span><span class="token operator">:</span><span class="token number">2</span> <span class="token number">1373838438</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">var</span> message <span class="token operator">=</span> window<span class="token punctuation">.</span><span class="token function">prompt</span><span class="token punctuation">(</span><span class="token string">&quot;请输入名字：&quot;</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">undefined</span></span>
<span class="line">message</span>
<span class="line"><span class="token string">&quot;张楠&quot;</span></span>
<span class="line"><span class="token keyword">var</span> message <span class="token operator">=</span> window<span class="token punctuation">.</span><span class="token function">prompt</span><span class="token punctuation">(</span><span class="token string">&quot;请输入名字：&quot;</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">undefined</span></span>
<span class="line">message</span>
<span class="line"><span class="token string">&quot;&quot;</span></span>
<span class="line"><span class="token keyword">var</span> message <span class="token operator">=</span> window<span class="token punctuation">.</span><span class="token function">prompt</span><span class="token punctuation">(</span><span class="token string">&quot;请输入名字：&quot;</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">undefined</span></span>
<span class="line">message</span>
<span class="line"><span class="token keyword">null</span></span>
<span class="line"><span class="token keyword">var</span> message <span class="token operator">=</span> window<span class="token punctuation">.</span><span class="token function">prompt</span><span class="token punctuation">(</span><span class="token string">&quot;请输入名字：&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;liankun&quot;</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_5、history" tabindex="-1"><a class="header-anchor" href="#_5、history"><span>5、history</span></a></h3><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js"><pre><code class="language-javascript"><span class="line"><span class="token comment">//回退</span></span>
<span class="line">history<span class="token punctuation">.</span><span class="token function">go</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token comment">//向前</span></span>
<span class="line">history<span class="token punctuation">.</span><span class="token function">go</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token comment">//回退</span></span>
<span class="line">history<span class="token punctuation">.</span><span class="token function">back</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token comment">//向前</span></span>
<span class="line">window<span class="token punctuation">.</span>history<span class="token punctuation">.</span><span class="token function">forward</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_6、navigator" tabindex="-1"><a class="header-anchor" href="#_6、navigator"><span>6、navigator</span></a></h3><p>这个属性提供了一写浏览器的属性，比如浏览器类型，版本之类的信息。</p><h3 id="_7、一点注意" tabindex="-1"><a class="header-anchor" href="#_7、一点注意"><span>7、一点注意</span></a></h3><p>在浏览器模型中，调用的方法或属性其实是属于 window 对象的</p><p>你在最外层定义一个方法或者一个变量其实是赋给了 window 对象</p><p>在浏览器模型中，调用 window 的方法可以省略 window. 也可以不省略，如下：</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js"><pre><code class="language-javascript"><span class="line">window<span class="token punctuation">.</span>localStorage<span class="token punctuation">.</span><span class="token function">setItem</span><span class="token punctuation">(</span><span class="token string">&quot;name&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;lucy&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">localStorage<span class="token punctuation">.</span><span class="token function">setItem</span><span class="token punctuation">(</span><span class="token string">&quot;name&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;lucy&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p>浏览器编程中，全局的变量，就是直接在最外边定义变量的时候尽量避开 name，应为 window 有 name 属性，你再定义就覆盖了人家的了，当然在方法里，对象中可以随便使用。</p>`,28)]))}const u=s(e,[["render",c]]),r=JSON.parse('{"path":"/codenotes/web/javascript/bom%E7%BC%96%E7%A8%8B.html","title":"第四章 BOM编程","lang":"zh-CN","frontmatter":{"title":"第四章 BOM编程","icon":"javascript","category":["前端","JavaScript"],"tag":["JavaScript","web"],"sticky":false,"star":false,"article":false,"timeline":false,"description":"一、概述 BOM 是浏览器对象模型。 BOM 提供了独立于内容 而与浏览器窗口进行交互的对象； BOM 的核心对象是 window； BOM 由一系列相关的对象构成，并且每个对象都提供了很多方法与属性； 打开浏览器，F12 打开调试窗口，console 里输入 window，就能看到这个对象。里边有很多的方法和属性，能够帮助我们查看和浏览器相关的一些内...","head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"WebPage\\",\\"name\\":\\"第四章 BOM编程\\",\\"description\\":\\"一、概述 BOM 是浏览器对象模型。 BOM 提供了独立于内容 而与浏览器窗口进行交互的对象； BOM 的核心对象是 window； BOM 由一系列相关的对象构成，并且每个对象都提供了很多方法与属性； 打开浏览器，F12 打开调试窗口，console 里输入 window，就能看到这个对象。里边有很多的方法和属性，能够帮助我们查看和浏览器相关的一些内...\\"}"],["meta",{"property":"og:url","content":"https://www.stazxr.cn/my-notes/my-notes/codenotes/web/javascript/bom%E7%BC%96%E7%A8%8B.html"}],["meta",{"property":"og:site_name","content":"終わり群星の知识宝库"}],["meta",{"property":"og:title","content":"第四章 BOM编程"}],["meta",{"property":"og:description","content":"一、概述 BOM 是浏览器对象模型。 BOM 提供了独立于内容 而与浏览器窗口进行交互的对象； BOM 的核心对象是 window； BOM 由一系列相关的对象构成，并且每个对象都提供了很多方法与属性； 打开浏览器，F12 打开调试窗口，console 里输入 window，就能看到这个对象。里边有很多的方法和属性，能够帮助我们查看和浏览器相关的一些内..."}],["meta",{"property":"og:type","content":"website"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-05-26T05:21:52.000Z"}],["meta",{"property":"article:tag","content":"web"}],["meta",{"property":"article:tag","content":"JavaScript"}],["meta",{"property":"article:modified_time","content":"2025-05-26T05:21:52.000Z"}]]},"git":{"createdTime":1725555447000,"updatedTime":1748236912000,"contributors":[{"name":"talentestors","username":"talentestors","email":"talentestors@gmail.com","commits":2,"url":"https://github.com/talentestors"}]},"readingTime":{"minutes":4.28,"words":1283},"filePathRelative":"codenotes/web/javascript/bom编程.md","autoDesc":true}');export{u as comp,r as data};
