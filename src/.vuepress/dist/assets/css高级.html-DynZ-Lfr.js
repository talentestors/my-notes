import{_ as s}from"./plugin-vue_export-helper-DlAUqK2U.js";import{ah as a,ap as e,ai as p}from"./app-CAqLFJSb.js";const l="/my-notes/assets/image-20240416162250432-D8MV8NXA.png",i={};function t(c,n){return p(),a("div",null,n[0]||(n[0]=[e(`<h2 id="一、精灵图-sprites" tabindex="-1"><a class="header-anchor" href="#一、精灵图-sprites"><span>一、精灵图（Sprites）</span></a></h2><p>一个网页中往往会应用很多小的背景图像作为修饰，当网页中的图像过多时，服务器就会频繁地接收和发送请求图片，造成服务器请求压力过大，这将大大降低页面的加载速度。</p><p>因此，<strong>为了有效地减少服务器接收和发送请求的次数，提高页面的加载速度</strong>，出现了 <strong>CSS 精灵技术</strong>（也称 CSS Sprites. CSS 雪碧）。</p><h3 id="_1-精灵图的使用" tabindex="-1"><a class="header-anchor" href="#_1-精灵图的使用"><span>1. 精灵图的使用</span></a></h3><p>使用精灵图核心总结：</p><ol><li>精灵图主要针对于小的背景图片使用。</li><li>主要借助于背景位置来实现 <code>background-position</code>.</li><li>一般情况下精灵图都是负值。（千万注意网页中的坐标： x 轴右边走是正值，左边走是负值， y 轴同理）</li></ol><div class="language-css line-numbers-mode" data-highlighter="prismjs" data-ext="css"><pre><code class="language-css"><span class="line"><span class="token selector">.box1</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token property">width</span><span class="token punctuation">:</span> 60px<span class="token punctuation">;</span></span>
<span class="line">  <span class="token property">height</span><span class="token punctuation">:</span> 60px<span class="token punctuation">;</span></span>
<span class="line">  <span class="token property">margin</span><span class="token punctuation">:</span> 100px auto<span class="token punctuation">;</span></span>
<span class="line">  <span class="token property">background</span><span class="token punctuation">:</span> <span class="token url"><span class="token function">url</span><span class="token punctuation">(</span>../images/sprites.png<span class="token punctuation">)</span></span> no-repeat -182px 0<span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="二、字体图标的产生" tabindex="-1"><a class="header-anchor" href="#二、字体图标的产生"><span>二、字体图标的产生</span></a></h2><p>字体图标使用场景：主要用于显示网页中通用、常用的一些小图标精灵图是有诸多优点的，但是缺点很明显。</p><ol><li>图片文件还是比较大的。</li><li>图片本身放大和缩小会失真。</li><li>一旦图片制作完毕想要更换非常复杂。 此时，有一种技术的出现很好的解决了以上问题，就是字体图标 iconfont 字体图标可以为前端工程师提供一种方便高效的图标使用方式，展示的是图标，本质属于字体。</li></ol><h3 id="_1-字体图标的优点" tabindex="-1"><a class="header-anchor" href="#_1-字体图标的优点"><span>1. 字体图标的优点</span></a></h3><p>轻量级：一个图标字体要比一系列的图像要小。一旦字体加载了，图标就会马上渲染出来，减少了服务器请求灵活性：本质其实是文字，可以很随意的改变颜色、产生阴影、透明效果、旋转等</p><p>兼容性：几乎支持所有的浏览器，请放心使用 注意：字体图标不能替代精灵技术，只是对工作中图标部分技术的提升和优化。</p><p>总结：</p><ol><li>如果遇到一些结构和样式比较简单的小图标，就用字体图标。</li><li>如果遇到一些结构和样式复杂一点的小图片，就用精灵图。</li></ol><h3 id="_2-字体图标的下载" tabindex="-1"><a class="header-anchor" href="#_2-字体图标的下载"><span>2. 字体图标的下载</span></a></h3><p>推荐下载网站： icomoon 字体图标库 <a href="http://icomoon.io" target="_blank" rel="noopener noreferrer">http://icomoon.io</a></p><p>IcoMoon 成立于 2011 年，推出了第一个自定义图标字体生成器，它允许用户选择所需要的图标，使它们成一字型。该字库内容种类繁多，非常全面，唯一的遗憾是国外服务器，打开网速较慢。</p><p>阿里 iconfont 字库<a href="http://www.iconfont.cn" target="_blank" rel="noopener noreferrer">http://www.iconfont.cn</a>这个是阿里妈妈 M2UX 的一个 iconfont 字体图标字库，包含了淘宝图标库和阿里妈妈图标库。可以使用 Al 制作图标上传生成。重点是，免费！</p><p>其它：<a href="https://simpleicons.org/" target="_blank" rel="noopener noreferrer">https://simpleicons.org/</a>、<a href="https://fontawesome.com.cn/" target="_blank" rel="noopener noreferrer">https://fontawesome.com.cn/</a></p><h3 id="_3-iconmoon-字体图标使用方法" tabindex="-1"><a class="header-anchor" href="#_3-iconmoon-字体图标使用方法"><span>3. IconMoon 字体图标使用方法</span></a></h3><ol><li><p>选择字体并下载</p></li><li><p>将下载文件中的 fonts 文件夹复制到项目根目录下</p></li><li><p>字体声明，将 <code>style.css</code> 文件中的开头的字体声明代码赋值到 html 中</p></li><li><p>给 <code>span</code> 声明字体</p><div class="language-css line-numbers-mode" data-highlighter="prismjs" data-ext="css"><pre><code class="language-css"><span class="line"><span class="token selector">span</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token property">font-family</span><span class="token punctuation">:</span> <span class="token string">&quot;icomoon&quot;</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>打开 <code>demo.html</code>，复制页面中的方框图标到 html 代码中即可。</p></li></ol><p>如何更新/添加字体图标？</p><p>上传 <code>selections.json</code>，添加字体图标，重新生成。下载，更换 <code>@font-face</code> 内容。</p><div class="hint-container tip"><p class="hint-container-title">提示</p><p>不同的平台，引入字体图标的方式有差异，一定要先阅读官方文档。</p></div><h2 id="三、css-三角图形" tabindex="-1"><a class="header-anchor" href="#三、css-三角图形"><span>三、CSS 三角图形</span></a></h2><div class="language-css line-numbers-mode" data-highlighter="prismjs" data-ext="css"><pre><code class="language-css"><span class="line"><span class="token selector">.box1</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token property">width</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span></span>
<span class="line">  <span class="token property">height</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span></span>
<span class="line">  <span class="token property">border</span><span class="token punctuation">:</span> 10px solid transparent<span class="token punctuation">;</span></span>
<span class="line">  <span class="token property">border-left-color</span><span class="token punctuation">:</span> black<span class="token punctuation">;</span></span>
<span class="line">  <span class="token comment">/* 照顾兼容性 */</span></span>
<span class="line">  <span class="token property">line-height</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span></span>
<span class="line">  <span class="token property">font-size</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_4-css-用户界面样式" tabindex="-1"><a class="header-anchor" href="#_4-css-用户界面样式"><span>4. CSS 用户界面样式</span></a></h2><h3 id="_4-1-鼠标样式-cursor" tabindex="-1"><a class="header-anchor" href="#_4-1-鼠标样式-cursor"><span>4.1 鼠标样式 cursor</span></a></h3><div class="language-css" data-highlighter="prismjs" data-ext="css"><pre><code class="language-css"><span class="line"><span class="token property">cursor</span><span class="token punctuation">:</span> default | pointer | move | text | not-allowed<span class="token punctuation">;</span></span>
<span class="line"></span></code></pre></div><h3 id="_4-2-取消表单轮廓和文本域缩放" tabindex="-1"><a class="header-anchor" href="#_4-2-取消表单轮廓和文本域缩放"><span>4.2 取消表单轮廓和文本域缩放</span></a></h3><div class="language-css line-numbers-mode" data-highlighter="prismjs" data-ext="css"><pre><code class="language-css"><span class="line"><span class="token selector">input</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token property">outline</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"><span class="token selector">textarea</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token property">outline</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span></span>
<span class="line">  <span class="token property">resize</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_5-vertical-align-的应用" tabindex="-1"><a class="header-anchor" href="#_5-vertical-align-的应用"><span>5. vertical-align 的应用</span></a></h2><p><code>vertical-align</code> 指定行内/行内块元素的元素的垂直对齐方式。</p><div class="language-CSS" data-highlighter="prismjs" data-ext="CSS"><pre><code class="language-CSS"><span class="line">vertical-align: baseline | top | middle | bottom</span>
<span class="line"></span></code></pre></div><figure><img src="`+l+`" alt="image-20240416162250432" tabindex="0" loading="lazy"><figcaption>image-20240416162250432</figcaption></figure><h3 id="_5-1-图片、表单和文字对齐-vertical-align" tabindex="-1"><a class="header-anchor" href="#_5-1-图片、表单和文字对齐-vertical-align"><span>5.1 图片、表单和文字对齐 vertical-align</span></a></h3><div class="language-css line-numbers-mode" data-highlighter="prismjs" data-ext="css"><pre><code class="language-css"><span class="line"><span class="token selector">img</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token property">vertical-align</span><span class="token punctuation">:</span> middle<span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"><span class="token selector">li</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token property">disaplay</span><span class="token punctuation">:</span> inline-block<span class="token punctuation">;</span></span>
<span class="line">  <span class="token property">vertical-align</span><span class="token punctuation">:</span> middle<span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_5-2-解决图片底部默认空白缝隙问题" tabindex="-1"><a class="header-anchor" href="#_5-2-解决图片底部默认空白缝隙问题"><span>5.2 解决图片底部默认空白缝隙问题</span></a></h3><p>bug ：图片底侧会有一个空白缝隙，原因是行内块元素会和文字的基线对齐。主要解决方法有两种：</p><ol><li>给图片添加 <code>vertical—align: middle topl bottom;</code> 等。（提倡使用的）</li><li>把图片转换为块级元素 <code>display: block；</code></li></ol><h2 id="_6-溢出的文字省略号显示" tabindex="-1"><a class="header-anchor" href="#_6-溢出的文字省略号显示"><span>6. 溢出的文字省略号显示</span></a></h2><h3 id="_6-1-单行文本溢出显示省略号—必须满足三个条件" tabindex="-1"><a class="header-anchor" href="#_6-1-单行文本溢出显示省略号—必须满足三个条件"><span>6.1 单行文本溢出显示省略号—必须满足三个条件</span></a></h3><div class="language-css line-numbers-mode" data-highlighter="prismjs" data-ext="css"><pre><code class="language-css"><span class="line"><span class="token comment">/*1·先强制一行内显示文本*/</span></span>
<span class="line"><span class="token property">white-space</span><span class="token punctuation">:</span> nowrap<span class="token punctuation">;</span></span>
<span class="line">默认normal 自动换行）</span>
<span class="line"><span class="token comment">/*2·超出的部分隐藏*/</span></span>
<span class="line"><span class="token property">overflow</span><span class="token punctuation">:</span> hidden<span class="token punctuation">;</span></span>
<span class="line"><span class="token comment">/*3.文字用省略号替代超出的部分*/</span></span>
<span class="line"><span class="token property">text-overflow</span><span class="token punctuation">:</span> ellipsis<span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_6-2-多行溢出文字显示省略号" tabindex="-1"><a class="header-anchor" href="#_6-2-多行溢出文字显示省略号"><span>6.2 多行溢出文字显示省略号</span></a></h3><div class="hint-container tip"><p class="hint-container-title">提示</p><p>多行文本溢出显示省略号，有较大兼容性问题，适合于 webKit 浏览器或移动端（移动端大部分是 webkit 内核）</p></div><div class="language-css line-numbers-mode" data-highlighter="prismjs" data-ext="css"><pre><code class="language-css"><span class="line"><span class="token property">overflow</span><span class="token punctuation">:</span> hidden<span class="token punctuation">;</span></span>
<span class="line"><span class="token property">text-overflow</span><span class="token punctuation">:</span> ellipsis<span class="token punctuation">;</span></span>
<span class="line"><span class="token comment">/* 弹性伸缩盒子模型显示 */</span></span>
<span class="line"><span class="token property">display</span><span class="token punctuation">:</span> -webkit-box<span class="token punctuation">;</span></span>
<span class="line"><span class="token comment">/* 限制在一个块元素显示的文本的行数 */</span></span>
<span class="line"><span class="token property">-webkit-line-clamp</span><span class="token punctuation">:</span> 3<span class="token punctuation">;</span></span>
<span class="line"><span class="token comment">/* 设置或检索伸缩盒对象的子元素的排列方式 */</span></span>
<span class="line"><span class="token property">-webkit-box-orient</span><span class="token punctuation">:</span> vertical<span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_7-margin-负值巧妙利用" tabindex="-1"><a class="header-anchor" href="#_7-margin-负值巧妙利用"><span>7. margin 负值巧妙利用</span></a></h2><ol><li>解决并排盒子之间的边框宽度加倍问题。 原理：让每个盒子压住前面的盒子，边框叠加。</li><li>鼠标移动边框颜色变化效果。</li></ol><div class="language-css line-numbers-mode" data-highlighter="prismjs" data-ext="css"><pre><code class="language-css"><span class="line"><span class="token comment">/*如果盒子没有定位，则鼠标经过添加相对定位即可*/</span></span>
<span class="line"><span class="token selector">ul li:hover</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token property">position</span><span class="token punctuation">:</span> relative<span class="token punctuation">;</span></span>
<span class="line">  <span class="token property">border</span><span class="token punctuation">:</span> 1px solid orange<span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"><span class="token comment">/*若li都有定位，则使用 z-index 提高层级*/</span></span>
<span class="line"><span class="token selector">ul li</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token property">z-index</span><span class="token punctuation">:</span> 1<span class="token punctuation">;</span></span>
<span class="line">  <span class="token property">border</span><span class="token punctuation">:</span> 1px solid orange<span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_8-文字围绕浮动元素巧妙运用" tabindex="-1"><a class="header-anchor" href="#_8-文字围绕浮动元素巧妙运用"><span>8. 文字围绕浮动元素巧妙运用</span></a></h2><p>原理：浮动元素不会遮住文字。</p><div class="language-css line-numbers-mode" data-highlighter="prismjs" data-ext="css"><pre><code class="language-css"><span class="line"><span class="token selector">div</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token property">float</span><span class="token punctuation">:</span> left<span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_9-行内块元素巧妙运用" tabindex="-1"><a class="header-anchor" href="#_9-行内块元素巧妙运用"><span>9. 行内块元素巧妙运用</span></a></h2><p>行内块元素布局当前页码和 <code>pre</code>，<code>next</code>盒子，使用 <code>text-align: center</code> 居中。</p><h2 id="_10-css-初始化" tabindex="-1"><a class="header-anchor" href="#_10-css-初始化"><span>10. CSS 初始化</span></a></h2><p>不同浏览器对有些标签的默认值是不同的，为了消除不同浏览器对 HTML 文本呈现的差异，照顾浏览器的兼容，我们需要对 CSS 初始化</p><p>简单理解： CSS 初始化是指重设浏览器的样式。（也称为 CSS reset ）每个网页都必须首先进行 CSS 初始化。 这里我们以京东 css 初始化代码为例。</p><p>Unicode 编码字体： 把中文字体的名称用相应的 Unicode 编码来代替，这样就可以有效的避免浏览器解释 CSS 代码时候出现乱码的问题。</p><p>比如：</p><ul><li>黑体：<code>\\9ED1\\4F53</code></li><li>宋体：<code>\\5B8B\\4F53</code></li><li>微软雅黑：<code>\\5FAE\\8F6F196C519ED1</code></li></ul><blockquote><p>京东 css 初始化</p></blockquote><div class="language-css line-numbers-mode" data-highlighter="prismjs" data-ext="css"><pre><code class="language-css"><span class="line"><span class="token comment">/* 把我们所有标签的内外边距清零 */</span></span>
<span class="line"><span class="token selector">*</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token property">margin</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span></span>
<span class="line">  <span class="token property">padding</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"><span class="token comment">/* em 和 i 斜体的文字不倾斜 */</span></span>
<span class="line"><span class="token selector">em,</span>
<span class="line">i</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token property">font-style</span><span class="token punctuation">:</span> normal<span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"><span class="token comment">/* 去掉li 的小圆点 */</span></span>
<span class="line"><span class="token selector">li</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token property">list-style</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token selector">img</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token comment">/* border 0 照顾低版本浏览器 如果 图片外面包含了链接会有边框的问题 */</span></span>
<span class="line">  <span class="token property">border</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span></span>
<span class="line">  <span class="token comment">/* 取消图片底侧有空白缝隙的问题 */</span></span>
<span class="line">  <span class="token property">vertical-align</span><span class="token punctuation">:</span> middle<span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token selector">button</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token comment">/* 当我们鼠标经过button 按钮的时候，鼠标变成小手 */</span></span>
<span class="line">  <span class="token property">cursor</span><span class="token punctuation">:</span> pointer<span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token selector">a</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token property">color</span><span class="token punctuation">:</span> #666<span class="token punctuation">;</span></span>
<span class="line">  <span class="token property">text-decoration</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token selector">a:hover</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token property">color</span><span class="token punctuation">:</span> #c81623<span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token selector">button,</span>
<span class="line">input</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token comment">/* &quot;\\5B8B\\4F53&quot; 就是宋体的意思 这样浏览器兼容性比较好 */</span></span>
<span class="line">  <span class="token property">font-family</span><span class="token punctuation">:</span> Microsoft YaHei<span class="token punctuation">,</span> Heiti SC<span class="token punctuation">,</span> tahoma<span class="token punctuation">,</span> arial<span class="token punctuation">,</span> Hiragino Sans GB<span class="token punctuation">,</span> <span class="token string">&quot;\\5B8B\\4F53&quot;</span><span class="token punctuation">,</span></span>
<span class="line">    sans-serif<span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token selector">body</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token comment">/* CSS3 抗锯齿形 让文字显示的更加清晰 */</span></span>
<span class="line">  <span class="token property">-webkit-font-smoothing</span><span class="token punctuation">:</span> antialiased<span class="token punctuation">;</span></span>
<span class="line">  <span class="token property">background-color</span><span class="token punctuation">:</span> #fff<span class="token punctuation">;</span></span>
<span class="line">  <span class="token property">font</span><span class="token punctuation">:</span> 12px/1.5 Microsoft YaHei<span class="token punctuation">,</span> Heiti SC<span class="token punctuation">,</span> tahoma<span class="token punctuation">,</span> arial<span class="token punctuation">,</span> Hiragino Sans GB<span class="token punctuation">,</span> <span class="token string">&quot;\\5B8B\\4F53&quot;</span><span class="token punctuation">,</span></span>
<span class="line">    sans-serif<span class="token punctuation">;</span></span>
<span class="line">  <span class="token property">color</span><span class="token punctuation">:</span> #666<span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token selector">.hide,</span>
<span class="line">.none</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token property">display</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"><span class="token comment">/* 清除浮动 */</span></span>
<span class="line"><span class="token selector">.clearfix:after</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token property">visibility</span><span class="token punctuation">:</span> hidden<span class="token punctuation">;</span></span>
<span class="line">  <span class="token property">clear</span><span class="token punctuation">:</span> both<span class="token punctuation">;</span></span>
<span class="line">  <span class="token property">display</span><span class="token punctuation">:</span> block<span class="token punctuation">;</span></span>
<span class="line">  <span class="token property">content</span><span class="token punctuation">:</span> <span class="token string">&quot;.&quot;</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token property">height</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token selector">.clearfix</span> <span class="token punctuation">{</span></span>
<span class="line">  *<span class="token property">zoom</span><span class="token punctuation">:</span> 1<span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,63)]))}const u=s(i,[["render",t]]),d=JSON.parse('{"path":"/codenotes/web/css/css%E9%AB%98%E7%BA%A7.html","title":"4. CSS 高级","lang":"zh-CN","frontmatter":{"title":"4. CSS 高级","icon":"css","category":["前端","CSS"],"tag":["CSS","web","CSS高级"],"sticky":false,"star":false,"article":false,"order":4,"timeline":false,"description":"一、精灵图（Sprites） 一个网页中往往会应用很多小的背景图像作为修饰，当网页中的图像过多时，服务器就会频繁地接收和发送请求图片，造成服务器请求压力过大，这将大大降低页面的加载速度。 因此，为了有效地减少服务器接收和发送请求的次数，提高页面的加载速度，出现了 CSS 精灵技术（也称 CSS Sprites. CSS 雪碧）。 1. 精灵图的使用 使...","head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"WebPage\\",\\"name\\":\\"4. CSS 高级\\",\\"description\\":\\"一、精灵图（Sprites） 一个网页中往往会应用很多小的背景图像作为修饰，当网页中的图像过多时，服务器就会频繁地接收和发送请求图片，造成服务器请求压力过大，这将大大降低页面的加载速度。 因此，为了有效地减少服务器接收和发送请求的次数，提高页面的加载速度，出现了 CSS 精灵技术（也称 CSS Sprites. CSS 雪碧）。 1. 精灵图的使用 使...\\"}"],["meta",{"property":"og:url","content":"https://www.stazxr.cn/my-notes/my-notes/codenotes/web/css/css%E9%AB%98%E7%BA%A7.html"}],["meta",{"property":"og:site_name","content":"終わり群星の知识宝库"}],["meta",{"property":"og:title","content":"4. CSS 高级"}],["meta",{"property":"og:description","content":"一、精灵图（Sprites） 一个网页中往往会应用很多小的背景图像作为修饰，当网页中的图像过多时，服务器就会频繁地接收和发送请求图片，造成服务器请求压力过大，这将大大降低页面的加载速度。 因此，为了有效地减少服务器接收和发送请求的次数，提高页面的加载速度，出现了 CSS 精灵技术（也称 CSS Sprites. CSS 雪碧）。 1. 精灵图的使用 使..."}],["meta",{"property":"og:type","content":"website"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-05-26T05:21:52.000Z"}],["meta",{"property":"article:tag","content":"CSS高级"}],["meta",{"property":"article:tag","content":"web"}],["meta",{"property":"article:tag","content":"CSS"}],["meta",{"property":"article:modified_time","content":"2025-05-26T05:21:52.000Z"}]]},"git":{"createdTime":1714921446000,"updatedTime":1748236912000,"contributors":[{"name":"talentestors","username":"talentestors","email":"talentestors@gmail.com","commits":7,"url":"https://github.com/talentestors"}]},"readingTime":{"minutes":6.76,"words":2029},"filePathRelative":"codenotes/web/css/css高级.md","autoDesc":true}');export{u as comp,d as data};
