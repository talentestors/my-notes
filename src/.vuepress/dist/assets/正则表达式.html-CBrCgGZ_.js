import{_ as s}from"./plugin-vue_export-helper-DlAUqK2U.js";import{ah as a,ap as e,ai as t}from"./app-CAqLFJSb.js";const p={};function o(c,n){return t(),a("div",null,n[0]||(n[0]=[e(`<h2 id="一、什么是正则表达式" tabindex="-1"><a class="header-anchor" href="#一、什么是正则表达式"><span>一、什么是正则表达式</span></a></h2><p>正则表达式是由一个字符序列形成的搜索模式，搜索模式可用于文本搜索和文本替换以及文本检测。</p><h2 id="二、创建正则表达式" tabindex="-1"><a class="header-anchor" href="#二、创建正则表达式"><span>二、创建正则表达式</span></a></h2><p>JS 正则表达式的创建有两种方式： <code>new RegExp()</code> 和 直接字面量。</p><div class="language-dart line-numbers-mode" data-highlighter="prismjs" data-ext="dart"><pre><code class="language-dart"><span class="line"><span class="token keyword">var</span> re<span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">RegExp</span> <span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token comment">//RegExp 是JS中的类，同Array类似。然而这个创建方法没有指定表达式内容</span></span>
<span class="line">re<span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">RegExp</span> <span class="token punctuation">(</span><span class="token string-literal"><span class="token string">&quot;a&quot;</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token comment">//最简单的正则表达式，将匹配字母a</span></span>
<span class="line">re<span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">RegExp</span> <span class="token punctuation">(</span><span class="token string-literal"><span class="token string">&quot;a&quot;</span></span><span class="token punctuation">,</span><span class="token string-literal"><span class="token string">&quot;i&quot;</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token comment">//重载的构造函数，其第二个参数指定将不区分大小写</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>其中，对于第二个参数，为可选参数，常用的有：</p><ul><li><code>g</code>：全文查找；</li><li><code>i</code>：不区分大小写；</li></ul><p>然而更为常见的正则表达式创建法则是：字面量的声明方式。 即：</p><div class="language-jsx line-numbers-mode" data-highlighter="prismjs" data-ext="jsx"><pre><code class="language-jsx"><span class="line"><span class="token keyword">var</span> re <span class="token operator">=</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">a</span><span class="token regex-delimiter">/</span><span class="token regex-flags">i</span></span><span class="token punctuation">;</span></span>
<span class="line"><span class="token comment">//其作用同：re=new RegExp (&quot;a&quot;,&quot;i&quot;)，而且更常用。</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="三、正则表达式本身的方法" tabindex="-1"><a class="header-anchor" href="#三、正则表达式本身的方法"><span>三、正则表达式本身的方法</span></a></h2><p>在 JavaScript 中，RegExp 对象是一个预定义了属性和方法的正则表达式对象。</p><ul><li><code>test()</code> 方法 <code>test()</code> 方法用于检测一个字符串是否匹配某个模式，如果字符串中含有匹配的文本，则返回<code>true</code>，否则返回 <code>false</code>。</li></ul><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js"><pre><code class="language-javascript"><span class="line"><span class="token comment">//以下实例用于搜索字符串中的字符 &quot;e&quot;：</span></span>
<span class="line"><span class="token keyword">var</span> patt <span class="token operator">=</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">e</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">;</span></span>
<span class="line">patt<span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span><span class="token string">&quot;The best things in life are free!&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">字符串中含有 <span class="token string">&quot;e&quot;</span>，所以该实例输出为：</span>
<span class="line"><span class="token boolean">true</span></span>
<span class="line">以上两行代码可以合并为一行：</span>
<span class="line"><span class="token operator">/</span>e<span class="token operator">/</span><span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span><span class="token string">&quot;The best things in life are free!&quot;</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li><code>exec()</code> 方法 <code>exec()</code> 方法用于检索字符串中的正则表达式的匹配。 该函数返回一个数组，其中存放匹配的结果。如果未找到匹配，则返回值为 <code>null</code>。 以下实例用于搜索字符串中的字母 <code>e</code>:</li></ul><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh"><pre><code class="language-bash"><span class="line">/e/.exec<span class="token punctuation">(</span><span class="token string">&quot;The best things in life are free!&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">字符串中含有 <span class="token string">&quot;e&quot;</span>，所以该实例输出为:</span>
<span class="line">e</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>比较常用的就是正则表达式的<code>test</code>方法了，因为大多只需要知道：某个字符串是否匹配某正则表达式，是则<code>True</code>，否则为<code>False</code>。</p><h2 id="四、字符串对象中与正则表达式有关的方法" tabindex="-1"><a class="header-anchor" href="#四、字符串对象中与正则表达式有关的方法"><span>四、字符串对象中与正则表达式有关的方法</span></a></h2><p>在 JavaScript 中，正则表达式通常用于两个字符串方法 : <code>search()</code>和 <code>replace()</code>。</p><div class="language-javascript" data-highlighter="prismjs" data-ext="js"><pre><code class="language-javascript"><span class="line"><span class="token function">search</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre></div><p>方法</p><ol><li>检索与正则表达式相匹配的子字符串，并返回子串的起始位置。</li></ol><div class="language-jsx line-numbers-mode" data-highlighter="prismjs" data-ext="jsx"><pre><code class="language-jsx"><span class="line"><span class="token comment">//使用正则表达式搜索 &quot;Runoob&quot; 字符串，且不区分大小写：</span></span>
<span class="line"><span class="token keyword">var</span> str <span class="token operator">=</span> <span class="token string">&quot;Visit Runoob!&quot;</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">var</span> n <span class="token operator">=</span> str<span class="token punctuation">.</span><span class="token function">search</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">Runoob</span><span class="token regex-delimiter">/</span><span class="token regex-flags">i</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token comment">//输出结果为：</span></span>
<span class="line"><span class="token number">6</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol><li>用于检索字符串中指定的子字符串。 <code>search</code>方法可使用字符串作为参数。字符串参数会转换为正则表达式：</li></ol><div class="language-csharp line-numbers-mode" data-highlighter="prismjs" data-ext="cs"><pre><code class="language-csharp"><span class="line"><span class="token comment">//检索字符串中 &quot;Runoob&quot; 的子串：</span></span>
<span class="line"><span class="token class-name"><span class="token keyword">var</span></span> str <span class="token operator">=</span> <span class="token string">&quot;Visit Runoob!&quot;</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token class-name"><span class="token keyword">var</span></span> n <span class="token operator">=</span> str<span class="token punctuation">.</span><span class="token function">search</span><span class="token punctuation">(</span><span class="token string">&quot;Runoob&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li><code>replace()</code> 方法 <code>replace()</code> 方法将接收字符串作为参数：</li></ul><div class="language-jsx line-numbers-mode" data-highlighter="prismjs" data-ext="jsx"><pre><code class="language-jsx"><span class="line"><span class="token keyword">var</span> str <span class="token operator">=</span> <span class="token string">&quot;Visit W3CSchool!&quot;</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">var</span> n <span class="token operator">=</span> str<span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token string">&quot;W3CSchool&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Runoob&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>n<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token comment">//结果Visit Runoob!</span></span>
<span class="line">console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>str<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token comment">//结果Visit W3CSchool!</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="五、常用语法分析" tabindex="-1"><a class="header-anchor" href="#五、常用语法分析"><span>五、常用语法分析</span></a></h2><h3 id="_5-1-、-、-的区别" tabindex="-1"><a class="header-anchor" href="#_5-1-、-、-的区别"><span>5.1 ()、[]、{} 的区别</span></a></h3><p>先看个例子 校验字符串是否全由 8 位数字组成</p><div class="language-jsx line-numbers-mode" data-highlighter="prismjs" data-ext="jsx"><pre><code class="language-jsx"><span class="line"><span class="token keyword">function</span> <span class="token function">isStudentNo</span><span class="token punctuation">(</span><span class="token parameter">str</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token keyword">var</span> reg <span class="token operator">=</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">^[0-9]{8}$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">;</span> <span class="token comment">/*定义验证表达式*/</span></span>
<span class="line">  <span class="token keyword">return</span> reg<span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span>str<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">/*进行验证*/</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>[]</code>是定义匹配的字符范围。<code>[0-9]</code>表示查找任何从 0 至 9 的数字。</p><p><code>{}</code> 一般用来表示匹配的长度。<code>{8}</code>表示位数为 8 位。</p><p><code>()</code> 的作用是提取匹配的字符串。表达式中有几个<code>()</code>就会得到几个相应的匹配字符串。比如<code>(\\s+)</code>表示连续空格的字符串。</p><h3 id="_5-2-和" tabindex="-1"><a class="header-anchor" href="#_5-2-和"><span>5.2 ^ 和 $</span></a></h3><p><code>^</code> 匹配一个字符串的开头，比如 (<code>^a</code>) 就是匹配以字母<code>a</code>开头的字符串</p><p><code>$</code> 匹配一个字符串的结尾,比如 (<code>b$</code>) 就是匹配以字母<code>b</code>结尾的字符串</p><div class="language-javascript" data-highlighter="prismjs" data-ext="js"><pre><code class="language-javascript"><span class="line"><span class="token operator">^</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">还有另个一个作用就是取反，比如</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">[</span><span class="token operator">^</span>xyz<span class="token punctuation">]</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">表示匹配的字符串不包含</span><span class="token template-punctuation string">\`</span></span>xyz</span>
<span class="line"></span></code></pre></div><p>需要注意的是：如果<code>^</code>出现在<code>[]</code>中一般表示取反，而出现在其他地方则是匹配字符串的开头。</p><h3 id="_5-3-d-s-w" tabindex="-1"><a class="header-anchor" href="#_5-3-d-s-w"><span>5.3 \\d \\s \\w</span></a></h3><p><code>\\d</code> 匹配一个非负整数， 等价于 <code>[0-9]</code>；</p><p><code>\\s</code> 匹配一个空白字符；</p><p><code>\\w</code> 匹配一个英文字母或数字，等价于<code>[0-9a-zA-Z]</code>；</p><p><code>.</code> 匹配除换行符以外的任意字符，等价于<code>[^\\n]</code>。</p><h3 id="_5-4" tabindex="-1"><a class="header-anchor" href="#_5-4"><span>5.4 * + ?</span></a></h3><p><code>*</code>表示匹配前面元素 0 次或多次，比如<code>(\\s*)</code>就是匹配 0 个或多个空格；</p><p><code>+</code> 表示匹配前面元素 1 次或多次，比如<code>(\\d+)</code>就是匹配由至少 1 个整数组成的字符串；</p><p><code>?</code>表示匹配前面元素 0 次或 1 次，相当于<code>{0,1}</code>，比如<code>(\\w?)</code> 就是匹配最多由 1 个字母或数字组成的字符串 。</p><h2 id="六、语法大全" tabindex="-1"><a class="header-anchor" href="#六、语法大全"><span>六、语法大全</span></a></h2><p><strong>修饰符</strong> 修饰符用于执行区分大小写和全局匹配:</p><table><thead><tr><th style="text-align:left;">修饰符</th><th style="text-align:left;">描述</th></tr></thead><tbody><tr><td style="text-align:left;"><code>i</code></td><td style="text-align:left;">执行对大小写不敏感的匹配。</td></tr><tr><td style="text-align:left;"><code>g</code></td><td style="text-align:left;">执行全局匹配（查找所有匹配而非在找到第一个匹配后停止）。</td></tr><tr><td style="text-align:left;"><code>m</code></td><td style="text-align:left;">执行多行匹配。</td></tr></tbody></table><p><strong>方括号</strong> 方括号用于查找某个范围内的字符：</p><table><thead><tr><th style="text-align:left;">表达式</th><th style="text-align:left;">描述</th><th></th></tr></thead><tbody><tr><td style="text-align:left;"><code>[abc]</code></td><td style="text-align:left;">查找方括号之间的任何字符。</td><td></td></tr><tr><td style="text-align:left;"><code>[^abc]</code></td><td style="text-align:left;">查找任何不在方括号之间的字符。</td><td></td></tr><tr><td style="text-align:left;"><code>[0-9]</code></td><td style="text-align:left;">查找任何从 0 至 9 的数字。</td><td></td></tr><tr><td style="text-align:left;"><code>[a-z]</code></td><td style="text-align:left;">查找任何从小写 a 到小写 z 的字符。</td><td></td></tr><tr><td style="text-align:left;"><code>[A-Z]</code></td><td style="text-align:left;">查找任何从大写 A 到大写 Z 的字符。</td><td></td></tr><tr><td style="text-align:left;"><code>[A-z]</code></td><td style="text-align:left;">查找任何从大写 A 到小写 z 的字符。</td><td></td></tr><tr><td style="text-align:left;"><code>[adgk]</code></td><td style="text-align:left;">查找给定集合内的任何字符。</td><td></td></tr><tr><td style="text-align:left;">\`[^adgk</td><td style="text-align:left;">]\`</td><td>查找给定集合外的任何字符。</td></tr></tbody></table><p><strong>元字符</strong> 元字符（<code>Metacharacter</code>）是拥有特殊含义的字符：</p><table><thead><tr><th style="text-align:left;">元字符</th><th style="text-align:left;">描述</th></tr></thead><tbody><tr><td style="text-align:left;"><strong><code>.</code></strong></td><td style="text-align:left;"><strong>查找单个字符，除了换行和行结束符。</strong></td></tr><tr><td style="text-align:left;"><strong><code>\\w</code></strong></td><td style="text-align:left;"><strong>查找单词字符。</strong></td></tr><tr><td style="text-align:left;"><strong><code>\\W</code></strong></td><td style="text-align:left;"><strong>查找非单词字符。</strong></td></tr><tr><td style="text-align:left;"><strong><code>\\d</code></strong></td><td style="text-align:left;"><strong>查找数字。</strong></td></tr><tr><td style="text-align:left;"><strong><code>\\D</code></strong></td><td style="text-align:left;"><strong>查找非数字字符。</strong></td></tr><tr><td style="text-align:left;"><strong><code>\\s</code></strong></td><td style="text-align:left;"><strong>查找空白字符。</strong></td></tr><tr><td style="text-align:left;"><strong><code>\\S</code></strong></td><td style="text-align:left;"><strong>查找非空白字符。</strong></td></tr><tr><td style="text-align:left;"><code>\\b</code></td><td style="text-align:left;">匹配单词边界。</td></tr><tr><td style="text-align:left;"><code>\\B</code></td><td style="text-align:left;">匹配非单词边界。</td></tr><tr><td style="text-align:left;"><code>\\0</code></td><td style="text-align:left;">查找 NULL 字符。</td></tr><tr><td style="text-align:left;"><code>\\n</code></td><td style="text-align:left;">查找换行符。</td></tr><tr><td style="text-align:left;"><code>\\f</code></td><td style="text-align:left;">查找换页符。</td></tr><tr><td style="text-align:left;"><code>\\r</code></td><td style="text-align:left;">查找回车符。</td></tr><tr><td style="text-align:left;"><code>\\t</code></td><td style="text-align:left;">查找制表符。</td></tr><tr><td style="text-align:left;"><code>\\v</code></td><td style="text-align:left;">查找垂直制表符。</td></tr><tr><td style="text-align:left;"><code>\\xxx</code></td><td style="text-align:left;">查找以八进制数 xxx 规定的字符。</td></tr><tr><td style="text-align:left;"><code>\\xdd</code></td><td style="text-align:left;">查找以十六进制数 dd 规定的字符。</td></tr><tr><td style="text-align:left;"><code>\\uxxxx</code></td><td style="text-align:left;">查找以十六进制数 xxxx 规定的 Unicode 字符。</td></tr></tbody></table><p><strong>量词</strong></p><table><thead><tr><th style="text-align:left;">量词</th><th style="text-align:left;">描述</th></tr></thead><tbody><tr><td style="text-align:left;"><code>n+</code></td><td style="text-align:left;">匹配任何包含至少一个 <code>n</code>的字符串。例如，<code>/a+/</code> 匹配 <code>candy</code>中的 <code>a</code>，<code>caaaaaaandy</code> 中所有的<code>a</code>。</td></tr><tr><td style="text-align:left;"><code>n*</code></td><td style="text-align:left;">匹配任何包含零个或多个 <code>n</code> 的字符串。例如，<code>/bo*/</code>匹配 <code>A ghost booooed</code> 中的 <code>boooo</code>，<code>A bird warbled</code> 中的 <code>b</code>，但是不匹配 <code>A goat grunted</code>。</td></tr><tr><td style="text-align:left;"><code>n?</code></td><td style="text-align:left;">匹配任何包含零个或一个 <code>n</code> 的字符串。例如，<code>/e?le?/</code> 匹配 <code>angel</code> 中的 <code>el</code>，<code>angle</code> 中的 <code>le</code>。</td></tr><tr><td style="text-align:left;"><code>n{X}</code></td><td style="text-align:left;">匹配包含<code>X</code> 个<code>n</code>的序列的字符串。例如，<code>/a{2}/</code>不匹配 <code>candy,</code> 中的 <code>a</code>，但是匹配 <code>caandy,</code> 中的两个 <code>a</code>，且匹配 <code>caaandy.</code> 中的前两个 <code>a</code>。</td></tr><tr><td style="text-align:left;"><code>n{X,}</code></td><td style="text-align:left;"><code>X</code> 是一个正整数。前面的模式 <code>n</code> 连续出现至少<code>X</code> 次时匹配。例如，<code>/a{2,}/</code>不匹配 <code>candy</code> 中的 <code>a</code>，但是匹配 <code>caandy</code> 和 <code>caaaaaaandy.</code> 中所有的 <code>a</code>。</td></tr><tr><td style="text-align:left;"><code>n{X,Y}</code></td><td style="text-align:left;"><code>X</code>和 <code>Y</code> 为正整数。前面的模式<code>n</code> 连续出现至少 <code>X</code>次，至多 <code>Y</code>次时匹配。例如，<code>/a{1,3}/</code> 不匹配 <code>cndy</code>，匹配 <code>candy,</code> 中的 <code>a</code>，<code>caandy,</code> 中的两个 <code>a</code>，匹配 <code>caaaaaaandy</code> 中的前面三个 <code>a</code>。注意，当匹配 <code>caaaaaaandy</code> 时，即使原始字符串拥有更多的 <code>a</code>，匹配项也是 <code>aaa</code>。</td></tr><tr><td style="text-align:left;"><code>n{X,}</code></td><td style="text-align:left;">匹配包含至少 <code>X</code> 个<code>n</code> 的序列的字符串。</td></tr><tr><td style="text-align:left;"><code>n$</code></td><td style="text-align:left;">匹配任何结尾为 <code>n</code>的字符串。</td></tr><tr><td style="text-align:left;"><code>^n</code></td><td style="text-align:left;">匹配任何开头为<code>n</code>的字符串。</td></tr><tr><td style="text-align:left;"><code>?=n</code></td><td style="text-align:left;">匹配任何其后紧接指定字符串<code>n</code> 的字符串。</td></tr><tr><td style="text-align:left;"><code>?!n</code></td><td style="text-align:left;">匹配任何其后没有紧接指定字符串 <code>n</code> 的字符串。</td></tr></tbody></table><h2 id="七、常用的-js-正则表达式" tabindex="-1"><a class="header-anchor" href="#七、常用的-js-正则表达式"><span>七、常用的 js 正则表达式</span></a></h2><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js"><pre><code class="language-javascript"><span class="line"><span class="token number">1.</span>验证用户名和密码：”<span class="token operator">^</span><span class="token punctuation">[</span>a<span class="token operator">-</span>zA<span class="token operator">-</span><span class="token constant">Z</span><span class="token punctuation">]</span>\\w<span class="token punctuation">{</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">15</span><span class="token punctuation">}</span>$”</span>
<span class="line"></span>
<span class="line"><span class="token number">2.</span>验证电话号码：（”<span class="token operator">^</span>\\d<span class="token punctuation">{</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">}</span><span class="token operator">-</span>\\d<span class="token punctuation">{</span><span class="token number">7</span><span class="token punctuation">,</span><span class="token number">8</span><span class="token punctuation">}</span>$”）</span>
<span class="line"></span>
<span class="line">eg：<span class="token number">021</span><span class="token operator">-</span><span class="token number">68686868</span> <span class="token number">0511</span><span class="token operator">-</span><span class="token number">6868686</span>；</span>
<span class="line"></span>
<span class="line"><span class="token number">3.</span>验证手机号码：”<span class="token operator">^</span><span class="token number">1</span><span class="token punctuation">[</span><span class="token number">3</span><span class="token operator">|</span><span class="token number">4</span><span class="token operator">|</span><span class="token number">5</span><span class="token operator">|</span><span class="token number">7</span><span class="token operator">|</span><span class="token number">8</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token operator">-</span><span class="token number">9</span><span class="token punctuation">]</span>\\d<span class="token punctuation">{</span><span class="token number">8</span><span class="token punctuation">}</span>$”；</span>
<span class="line"></span>
<span class="line"><span class="token number">4.</span>验证身份证号（<span class="token number">15</span>位或<span class="token number">18</span>位数字）：”\\d<span class="token punctuation">{</span><span class="token number">14</span><span class="token punctuation">}</span><span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token operator">-</span><span class="token number">9</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token operator">-</span>9xX<span class="token punctuation">]</span>”；</span>
<span class="line"></span>
<span class="line"><span class="token number">5.</span><span class="token function">验证Email地址：</span><span class="token punctuation">(</span>“<span class="token operator">^</span>\\w<span class="token operator">+</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token operator">-</span><span class="token operator">+</span><span class="token punctuation">.</span><span class="token punctuation">]</span>\\w<span class="token operator">+</span><span class="token punctuation">)</span>@\\w<span class="token operator">+</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token operator">-</span><span class="token punctuation">.</span><span class="token punctuation">]</span>\\w<span class="token operator">+</span><span class="token punctuation">)</span><span class="token punctuation">.</span>\\w<span class="token operator">+</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token operator">-</span><span class="token punctuation">.</span><span class="token punctuation">]</span>\\w<span class="token operator">+</span><span class="token punctuation">)</span><span class="token operator">*</span>$”<span class="token punctuation">)</span>；</span>
<span class="line"></span>
<span class="line"><span class="token number">6.</span><span class="token function">只能输入由数字和26个英文字母组成的字符串：</span><span class="token punctuation">(</span>“<span class="token operator">^</span><span class="token punctuation">[</span><span class="token constant">A</span><span class="token operator">-</span>Za<span class="token operator">-</span>z0<span class="token operator">-</span><span class="token number">9</span><span class="token punctuation">]</span><span class="token operator">+</span>$”<span class="token punctuation">)</span> <span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token number">7.</span>整数或者小数：<span class="token operator">^</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token operator">-</span><span class="token number">9</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">.</span><span class="token punctuation">]</span><span class="token punctuation">{</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">}</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token operator">-</span><span class="token number">9</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">}</span>$</span>
<span class="line"></span>
<span class="line"><span class="token number">8.</span>只能输入数字：”<span class="token operator">^</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token operator">-</span><span class="token number">9</span><span class="token punctuation">]</span><span class="token operator">*</span>$”。</span>
<span class="line"></span>
<span class="line"><span class="token number">9.</span>只能输入n位的数字：”<span class="token operator">^</span>\\d<span class="token punctuation">{</span>n<span class="token punctuation">}</span>$”。</span>
<span class="line"></span>
<span class="line"><span class="token number">10.</span>只能输入至少n位的数字：”<span class="token operator">^</span>\\d<span class="token punctuation">{</span>n<span class="token punctuation">,</span><span class="token punctuation">}</span>$”。</span>
<span class="line"></span>
<span class="line"><span class="token number">11.</span>只能输入m<span class="token operator">~</span>n位的数字：”<span class="token operator">^</span>\\d<span class="token punctuation">{</span>m<span class="token punctuation">,</span>n<span class="token punctuation">}</span>$”。</span>
<span class="line"></span>
<span class="line"><span class="token number">12.</span>只能输入零和非零开头的数字：”<span class="token operator">^</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token operator">|</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token operator">-</span><span class="token number">9</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token operator">-</span><span class="token number">9</span><span class="token punctuation">]</span><span class="token operator">*</span><span class="token punctuation">)</span>$”。</span>
<span class="line"></span>
<span class="line"><span class="token number">13.</span>只能输入有两位小数的正实数：”<span class="token operator">^</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token operator">-</span><span class="token number">9</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">(</span><span class="token punctuation">.</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token operator">-</span><span class="token number">9</span><span class="token punctuation">]</span><span class="token punctuation">{</span><span class="token number">2</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token operator">?</span>$”。</span>
<span class="line"></span>
<span class="line"><span class="token number">14.</span>只能输入有<span class="token number">1</span><span class="token operator">~</span><span class="token number">3</span>位小数的正实数：”<span class="token operator">^</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token operator">-</span><span class="token number">9</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">(</span><span class="token punctuation">.</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token operator">-</span><span class="token number">9</span><span class="token punctuation">]</span><span class="token punctuation">{</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token operator">?</span>$”。</span>
<span class="line"></span>
<span class="line"><span class="token number">15.</span>只能输入非零的正整数：”<span class="token operator">^</span><span class="token operator">+</span><span class="token operator">?</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token operator">-</span><span class="token number">9</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token operator">-</span><span class="token number">9</span><span class="token punctuation">]</span><span class="token operator">*</span>$”。</span>
<span class="line"></span>
<span class="line"><span class="token number">16.</span>只能输入非零的负整数：”<span class="token operator">^</span><span class="token operator">-</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token operator">-</span><span class="token number">9</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token number">0</span><span class="token operator">-</span><span class="token number">9</span>″<span class="token operator">*</span>$。</span>
<span class="line"></span>
<span class="line"><span class="token number">17.</span>只能输入长度为<span class="token number">3</span>的字符：”<span class="token operator">^</span><span class="token punctuation">.</span><span class="token punctuation">{</span><span class="token number">3</span><span class="token punctuation">}</span>$”。</span>
<span class="line"></span>
<span class="line"><span class="token number">18.</span>只能输入由<span class="token number">26</span>个英文字母组成的字符串：”<span class="token operator">^</span><span class="token punctuation">[</span><span class="token constant">A</span><span class="token operator">-</span>Za<span class="token operator">-</span>z<span class="token punctuation">]</span><span class="token operator">+</span>$”。</span>
<span class="line"></span>
<span class="line"><span class="token number">19.</span>只能输入由<span class="token number">26</span>个大写英文字母组成的字符串：”<span class="token operator">^</span><span class="token punctuation">[</span><span class="token constant">A</span><span class="token operator">-</span><span class="token constant">Z</span><span class="token punctuation">]</span><span class="token operator">+</span>$”。</span>
<span class="line"></span>
<span class="line"><span class="token number">20.</span>只能输入由<span class="token number">26</span>个小写英文字母组成的字符串：”<span class="token operator">^</span><span class="token punctuation">[</span>a<span class="token operator">-</span>z<span class="token punctuation">]</span><span class="token operator">+</span>$”。</span>
<span class="line"></span>
<span class="line"><span class="token number">21.</span>验证是否含有<span class="token operator">%</span><span class="token operator">&amp;</span>’<span class="token punctuation">,</span><span class="token punctuation">;</span><span class="token operator">=</span><span class="token operator">?</span>$\\”等字符：”<span class="token punctuation">[</span><span class="token operator">%</span><span class="token operator">&amp;</span>&#39;<span class="token punctuation">,</span><span class="token punctuation">;</span><span class="token operator">=</span><span class="token operator">?</span>$\\x22<span class="token punctuation">]</span><span class="token operator">+</span>”。</span>
<span class="line"></span>
<span class="line"><span class="token number">22.</span>只能输入汉字：”<span class="token operator">^</span><span class="token punctuation">[</span>\\u4e00<span class="token operator">-</span>\\u9fa5<span class="token punctuation">]</span><span class="token punctuation">{</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token punctuation">}</span>$”。</span>
<span class="line"></span>
<span class="line"><span class="token number">23.</span>验证<span class="token constant">URL</span>：”<span class="token operator">^</span>http<span class="token operator">:</span><span class="token operator">/</span><span class="token operator">/</span><span class="token punctuation">(</span><span class="token punctuation">[</span>\\w<span class="token operator">-</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">.</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token punctuation">[</span>\\w<span class="token operator">-</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">(</span><span class="token operator">/</span><span class="token punctuation">[</span>\\w<span class="token operator">-</span><span class="token punctuation">.</span><span class="token operator">/</span><span class="token operator">?</span><span class="token operator">%</span><span class="token operator">&amp;=</span><span class="token punctuation">]</span><span class="token operator">*</span><span class="token punctuation">)</span><span class="token operator">?</span>$”。</span>
<span class="line"></span>
<span class="line"><span class="token number">24.</span>验证一年的<span class="token number">12</span>个月：”<span class="token operator">^</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token operator">?</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token operator">-</span><span class="token number">9</span><span class="token punctuation">]</span><span class="token operator">|</span><span class="token number">1</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token operator">-</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">)</span>$”正确格式为：”<span class="token number">01</span>″～”<span class="token number">09</span>″和”<span class="token number">10</span>″～”<span class="token number">12</span>″。</span>
<span class="line"></span>
<span class="line"><span class="token number">25.</span>验证一个月的<span class="token number">31</span>天：”<span class="token operator">^</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token operator">?</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token operator">-</span><span class="token number">9</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">|</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token operator">|</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token operator">-</span><span class="token number">9</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">|</span><span class="token number">30</span><span class="token operator">|</span><span class="token number">31</span><span class="token punctuation">)</span>$”正确格式为；”<span class="token number">01</span>″～”<span class="token number">09</span>″、”<span class="token number">10</span>″～”<span class="token number">29</span>″和“<span class="token number">30</span>”<span class="token operator">~</span>“<span class="token number">31</span>”。</span>
<span class="line"></span>
<span class="line"><span class="token number">26.</span>获取日期正则表达式：<span class="token punctuation">[</span>\\d<span class="token punctuation">{</span><span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">(</span>file<span class="token operator">:</span><span class="token operator">/</span><span class="token comment">///d%7B4)}[年|-|.]\\d{\\1-\\12}[月|-|.]\\d{\\1-\\31}日?</span></span>
<span class="line"></span>
<span class="line">评注：可用来匹配大多数年月日信息。</span>
<span class="line"></span>
<span class="line"><span class="token number">27.</span><span class="token function">匹配双字节字符</span><span class="token punctuation">(</span>包括汉字在内<span class="token punctuation">)</span>：<span class="token punctuation">[</span><span class="token operator">^</span>\\x00<span class="token operator">-</span>\\xff<span class="token punctuation">]</span></span>
<span class="line"></span>
<span class="line">评注：可以用来计算字符串的长度（一个双字节字符长度计<span class="token number">2</span>，<span class="token constant">ASCII</span>字符计<span class="token number">1</span>）</span>
<span class="line"></span>
<span class="line"><span class="token number">28.</span>匹配空白行的正则表达式：\\n\\s<span class="token operator">*</span>\\r</span>
<span class="line"></span>
<span class="line">评注：可以用来删除空白行</span>
<span class="line"></span>
<span class="line"><span class="token number">29.</span>匹配<span class="token constant">HTML</span>标记的正则表达式：<span class="token operator">&lt;</span><span class="token punctuation">(</span>\\<span class="token constant">S</span><span class="token operator">?</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token operator">^</span><span class="token operator">&gt;</span><span class="token punctuation">]</span><span class="token operator">&gt;</span><span class="token punctuation">.</span><span class="token operator">?</span><span class="token operator">&lt;</span><span class="token operator">/</span><span class="token operator">&gt;</span><span class="token operator">|</span><span class="token operator">&lt;</span><span class="token punctuation">.</span><span class="token operator">?</span> <span class="token operator">/</span><span class="token operator">&gt;</span></span>
<span class="line"></span>
<span class="line">评注：网上流传的版本太糟糕，上面这个也仅仅能匹配部分，对于复杂的嵌套标记依旧无能为力</span>
<span class="line"></span>
<span class="line"><span class="token number">30.</span>匹配首尾空白字符的正则表达式：<span class="token operator">^</span>\\s<span class="token operator">|</span>\\s$</span>
<span class="line"></span>
<span class="line"><span class="token function">评注：可以用来删除行首行尾的空白字符</span><span class="token punctuation">(</span>包括空格、制表符、换页符等等<span class="token punctuation">)</span>，非常有用的表达式</span>
<span class="line"></span>
<span class="line"><span class="token number">31.</span>匹配网址<span class="token constant">URL</span>的正则表达式：<span class="token punctuation">[</span>a<span class="token operator">-</span>zA<span class="token operator">-</span>z<span class="token punctuation">]</span><span class="token operator">+</span><span class="token operator">:</span><span class="token operator">/</span><span class="token operator">/</span><span class="token punctuation">[</span><span class="token operator">^</span>\\s<span class="token punctuation">]</span><span class="token operator">*</span></span>
<span class="line"></span>
<span class="line">评注：网上流传的版本功能很有限，上面这个基本可以满足需求</span>
<span class="line"></span>
<span class="line"><span class="token number">32.</span><span class="token function">匹配帐号是否合法</span><span class="token punctuation">(</span>字母开头，允许<span class="token number">5</span><span class="token operator">-</span><span class="token number">16</span>字节，允许字母数字下划线<span class="token punctuation">)</span>：<span class="token operator">^</span><span class="token punctuation">[</span>a<span class="token operator">-</span>zA<span class="token operator">-</span><span class="token constant">Z</span><span class="token punctuation">]</span><span class="token punctuation">[</span>a<span class="token operator">-</span>zA<span class="token operator">-</span><span class="token constant">Z0</span><span class="token operator">-</span>9_<span class="token punctuation">]</span><span class="token punctuation">{</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">15</span><span class="token punctuation">}</span>$</span>
<span class="line"></span>
<span class="line">评注：表单验证时很实用</span>
<span class="line"></span>
<span class="line"><span class="token number">33.</span>匹配腾讯<span class="token constant">QQ</span>号：<span class="token punctuation">[</span><span class="token number">1</span><span class="token operator">-</span><span class="token number">9</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token operator">-</span><span class="token number">9</span><span class="token punctuation">]</span><span class="token punctuation">{</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">评注：腾讯<span class="token constant">QQ</span>号从<span class="token number">10</span> <span class="token number">000</span> 开始</span>
<span class="line"></span>
<span class="line"><span class="token number">34.</span>匹配中国邮政编码：<span class="token punctuation">[</span><span class="token number">1</span><span class="token operator">-</span><span class="token number">9</span><span class="token punctuation">]</span>\\d<span class="token punctuation">{</span><span class="token number">5</span><span class="token punctuation">}</span><span class="token punctuation">(</span><span class="token operator">?</span><span class="token operator">!</span>\\d<span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line">评注：中国邮政编码为<span class="token number">6</span>位数字</span>
<span class="line"></span>
<span class="line"><span class="token number">35.</span><span class="token function">匹配ip地址：</span><span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token operator">-</span><span class="token number">4</span><span class="token punctuation">]</span>\\d<span class="token operator">|</span><span class="token number">25</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token operator">-</span><span class="token number">5</span><span class="token punctuation">]</span><span class="token operator">|</span><span class="token punctuation">[</span><span class="token number">01</span><span class="token punctuation">]</span><span class="token operator">?</span>\\d\\d<span class="token operator">?</span><span class="token punctuation">)</span><span class="token punctuation">.</span></span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token number">3</span><span class="token punctuation">}</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token operator">-</span><span class="token number">4</span><span class="token punctuation">]</span>\\d<span class="token operator">|</span><span class="token number">25</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token operator">-</span><span class="token number">5</span><span class="token punctuation">]</span><span class="token operator">|</span><span class="token punctuation">[</span><span class="token number">01</span><span class="token punctuation">]</span><span class="token operator">?</span>\\d\\d<span class="token operator">?</span><span class="token punctuation">)</span>。</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,58)]))}const r=s(p,[["render",o]]),u=JSON.parse('{"path":"/codenotes/web/javascript/%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F.html","title":"第八章 正则表达式","lang":"zh-CN","frontmatter":{"title":"第八章 正则表达式","icon":"javascript","category":["前端","JavaScript"],"tag":["JavaScript","web"],"sticky":false,"star":false,"article":false,"timeline":false,"description":"一、什么是正则表达式 正则表达式是由一个字符序列形成的搜索模式，搜索模式可用于文本搜索和文本替换以及文本检测。 二、创建正则表达式 JS 正则表达式的创建有两种方式： new RegExp() 和 直接字面量。 其中，对于第二个参数，为可选参数，常用的有： g：全文查找； i：不区分大小写； 然而更为常见的正则表达式创建法则是：字面量的声明方式。 即：...","head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"WebPage\\",\\"name\\":\\"第八章 正则表达式\\",\\"description\\":\\"一、什么是正则表达式 正则表达式是由一个字符序列形成的搜索模式，搜索模式可用于文本搜索和文本替换以及文本检测。 二、创建正则表达式 JS 正则表达式的创建有两种方式： new RegExp() 和 直接字面量。 其中，对于第二个参数，为可选参数，常用的有： g：全文查找； i：不区分大小写； 然而更为常见的正则表达式创建法则是：字面量的声明方式。 即：...\\"}"],["meta",{"property":"og:url","content":"https://www.stazxr.cn/my-notes/my-notes/codenotes/web/javascript/%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F.html"}],["meta",{"property":"og:site_name","content":"終わり群星の知识宝库"}],["meta",{"property":"og:title","content":"第八章 正则表达式"}],["meta",{"property":"og:description","content":"一、什么是正则表达式 正则表达式是由一个字符序列形成的搜索模式，搜索模式可用于文本搜索和文本替换以及文本检测。 二、创建正则表达式 JS 正则表达式的创建有两种方式： new RegExp() 和 直接字面量。 其中，对于第二个参数，为可选参数，常用的有： g：全文查找； i：不区分大小写； 然而更为常见的正则表达式创建法则是：字面量的声明方式。 即：..."}],["meta",{"property":"og:type","content":"website"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-05-26T05:21:52.000Z"}],["meta",{"property":"article:tag","content":"web"}],["meta",{"property":"article:tag","content":"JavaScript"}],["meta",{"property":"article:modified_time","content":"2025-05-26T05:21:52.000Z"}]]},"git":{"createdTime":1725555447000,"updatedTime":1748236912000,"contributors":[{"name":"talentestors","username":"talentestors","email":"talentestors@gmail.com","commits":2,"url":"https://github.com/talentestors"}]},"readingTime":{"minutes":9.64,"words":2892},"filePathRelative":"codenotes/web/javascript/正则表达式.md","autoDesc":true}');export{r as comp,u as data};
