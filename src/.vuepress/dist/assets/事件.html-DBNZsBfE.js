import{_ as s}from"./plugin-vue_export-helper-DlAUqK2U.js";import{ah as a,ap as e,ai as t}from"./app-CAqLFJSb.js";const p="/my-notes/assets/image-20211220183531957-D5iXgku0.png",i={};function l(c,n){return t(),a("div",null,n[0]||(n[0]=[e(`<p>事件是为了让我们更好的去和页面进行交互。</p><p>事件一般是定义在元素节点上的，所以我们一般称之为给元素节点绑定一个事件。</p><h2 id="一-、定义事件" tabindex="-1"><a class="header-anchor" href="#一-、定义事件"><span>一 、定义事件</span></a></h2><h3 id="_1-addeventlistener" tabindex="-1"><a class="header-anchor" href="#_1-addeventlistener"><span>（1）addEventListener</span></a></h3><p>最常用，大神都是这么写。</p><p>康永亮说兼容性问题，大家可以自行查阅资料。</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js"><pre><code class="language-javascript"><span class="line"><span class="token keyword">var</span> div1 <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">&quot;div1&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">div1<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">&quot;click&quot;</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;click&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2-onclick" tabindex="-1"><a class="header-anchor" href="#_2-onclick"><span>（2）onclick</span></a></h3><p>一定要知道，能少用就少用把。</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js"><pre><code class="language-javascript"><span class="line"><span class="token keyword">var</span> div1 <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">&quot;div1&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">div1<span class="token punctuation">.</span><span class="token function-variable function">onclick</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;click&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_3-标签内使用" tabindex="-1"><a class="header-anchor" href="#_3-标签内使用"><span>（3）标签内使用</span></a></h3><p>也常用</p><div class="language-html line-numbers-mode" data-highlighter="prismjs" data-ext="html"><pre><code class="language-html"><span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>content aaa<span class="token punctuation">&quot;</span></span> <span class="token special-attr"><span class="token attr-name">onclick</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span><span class="token value javascript language-javascript"><span class="token function">test</span><span class="token punctuation">(</span><span class="token number">123</span><span class="token punctuation">)</span></span><span class="token punctuation">&quot;</span></span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>div1<span class="token punctuation">&quot;</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>bbb<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"></span>
<span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>text/javascript<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript"></span>
<span class="line">  <span class="token keyword">function</span> <span class="token function">test</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;test&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line"></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="二、清除事件" tabindex="-1"><a class="header-anchor" href="#二、清除事件"><span>二、清除事件</span></a></h2><h3 id="_1-方式一" tabindex="-1"><a class="header-anchor" href="#_1-方式一"><span>（1）方式一</span></a></h3><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js"><pre><code class="language-javascript"><span class="line">div1<span class="token punctuation">.</span>onclick <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span></span>
<span class="line">或者<span class="token punctuation">;</span></span>
<span class="line">div1<span class="token punctuation">.</span>onclick <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2-方式二" tabindex="-1"><a class="header-anchor" href="#_2-方式二"><span>（2）方式二</span></a></h3><p>使用此方法，必须将回调函数定义在外边，不能使用匿名回调</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js"><pre><code class="language-javascript"><span class="line"><span class="token keyword">var</span> <span class="token function-variable function">callback</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;click&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">var</span> div1 <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">&quot;div1&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token comment">//添加一个事件</span></span>
<span class="line">div1<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">&quot;click&quot;</span><span class="token punctuation">,</span> callback<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token comment">//移除一个事件</span></span>
<span class="line">div1<span class="token punctuation">.</span><span class="token function">removeEventListener</span><span class="token punctuation">(</span><span class="token string">&quot;click&quot;</span><span class="token punctuation">,</span> callback<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="三、事件分类" tabindex="-1"><a class="header-anchor" href="#三、事件分类"><span>三、事件分类</span></a></h2><h3 id="_1-鼠标事件" tabindex="-1"><a class="header-anchor" href="#_1-鼠标事件"><span>（1）鼠标事件</span></a></h3><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js"><pre><code class="language-javascript"><span class="line">（常用）</span>
<span class="line">onclick：点击某个对象时触发</span>
<span class="line">ondblclick：双击某个对象时触发</span>
<span class="line">onmouseover：鼠标移入某个元素时触发</span>
<span class="line">onmouseout：鼠标移出某个元素时触发</span>
<span class="line"></span>
<span class="line">（知道，不用）</span>
<span class="line">onmouseenter：鼠标进入某个元素时触发</span>
<span class="line">onmouseleave：鼠标离开某个元素时触发</span>
<span class="line">onmousedown：鼠标按下时触发</span>
<span class="line">onmouseup：鼠标抬起时触发</span>
<span class="line">onmousemove：鼠标被移动时触发</span>
<span class="line">onwheel：鼠标滚轮滚动时触发</span>
<span class="line">oncontextmenu：点击鼠标右键时触发</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2-键盘事件" tabindex="-1"><a class="header-anchor" href="#_2-键盘事件"><span>（2）键盘事件</span></a></h3><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js"><pre><code class="language-javascript"><span class="line">键盘事件</span>
<span class="line">onkeydown：键盘的键按下时触发</span>
<span class="line">onkeyup：键盘的键放开时触发</span>
<span class="line">onkeypress：按下或按住键盘键时触发</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_3-表单事件" tabindex="-1"><a class="header-anchor" href="#_3-表单事件"><span>（3）表单事件</span></a></h3><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js"><pre><code class="language-javascript"><span class="line">常用</span>
<span class="line">onfocus：元素获得焦点时触发</span>
<span class="line">onblur：元素失去焦点时触发</span>
<span class="line">onchange：元素内容改变时触发</span>
<span class="line">oninput：元素获取用户输入时触发</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_4-文档、浏览器-对象事件" tabindex="-1"><a class="header-anchor" href="#_4-文档、浏览器-对象事件"><span>（4）（文档、浏览器）对象事件</span></a></h3><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js"><pre><code class="language-javascript"><span class="line">会用到</span>
<span class="line">onload：元素加载完时触发</span>
<span class="line"></span>
<span class="line">一辈子也用不了几次，知不知道都行</span>
<span class="line">onresize：浏览器窗口大小改变时触发</span>
<span class="line">onabort：图形的加载被中断时触发</span>
<span class="line">onerror：当加载文档或者图片时（没找到）发生的错误时触发</span>
<span class="line">onscroll：文档滚动时触发</span>
<span class="line">onpageshow：用户访问页面时触发</span>
<span class="line">onunload：用户退出页面时触发</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="四、事件冒泡和捕获" tabindex="-1"><a class="header-anchor" href="#四、事件冒泡和捕获"><span>四、事件冒泡和捕获</span></a></h2><p><strong>1、事件捕获</strong> 捕获型事件(event capturing)：事件从最不精确的对象(document 对象)开始触发，然后到最精确(也可以在窗口级别捕获事件，不过必须由开发人员特别指定)</p><p><strong>2、事件冒泡</strong> 冒泡型事件：事件按照从最特定的事件目标到最不特定的事件目标(document 对象)的顺序触发。</p><p><strong>3、捕获和冒泡过程图</strong></p><figure><img src="`+p+`" alt="image-20211220183531957" tabindex="0" loading="lazy"><figcaption>image-20211220183531957</figcaption></figure><p>事件是先进行捕获，后进行冒泡！</p><p>addEventListener 的第三个参数如果是 false 表示在冒泡阶段处理回调函数，如果是 true 表示在捕获阶段处理回调函数。</p><p>怎么阻止事件冒泡？event.stopPropagation();</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js"><pre><code class="language-javascript"><span class="line">ul<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span></span>
<span class="line">  <span class="token string">&quot;click&quot;</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">event</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;ul&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    event<span class="token punctuation">.</span><span class="token function">stopPropagation</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token boolean">true</span></span>
<span class="line"><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,37)]))}const r=s(i,[["render",l]]),d=JSON.parse('{"path":"/codenotes/web/javascript/%E4%BA%8B%E4%BB%B6.html","title":"第五章 事件","lang":"zh-CN","frontmatter":{"title":"第五章 事件","icon":"javascript","category":["前端","JavaScript"],"tag":["JavaScript","web"],"sticky":false,"star":false,"article":false,"timeline":false,"description":"事件是为了让我们更好的去和页面进行交互。 事件一般是定义在元素节点上的，所以我们一般称之为给元素节点绑定一个事件。 一 、定义事件 （1）addEventListener 最常用，大神都是这么写。 康永亮说兼容性问题，大家可以自行查阅资料。 （2）onclick 一定要知道，能少用就少用把。 （3）标签内使用 也常用 二、清除事件 （1）方式一 （2）...","head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"WebPage\\",\\"name\\":\\"第五章 事件\\",\\"description\\":\\"事件是为了让我们更好的去和页面进行交互。 事件一般是定义在元素节点上的，所以我们一般称之为给元素节点绑定一个事件。 一 、定义事件 （1）addEventListener 最常用，大神都是这么写。 康永亮说兼容性问题，大家可以自行查阅资料。 （2）onclick 一定要知道，能少用就少用把。 （3）标签内使用 也常用 二、清除事件 （1）方式一 （2）...\\"}"],["meta",{"property":"og:url","content":"https://www.stazxr.cn/my-notes/my-notes/codenotes/web/javascript/%E4%BA%8B%E4%BB%B6.html"}],["meta",{"property":"og:site_name","content":"終わり群星の知识宝库"}],["meta",{"property":"og:title","content":"第五章 事件"}],["meta",{"property":"og:description","content":"事件是为了让我们更好的去和页面进行交互。 事件一般是定义在元素节点上的，所以我们一般称之为给元素节点绑定一个事件。 一 、定义事件 （1）addEventListener 最常用，大神都是这么写。 康永亮说兼容性问题，大家可以自行查阅资料。 （2）onclick 一定要知道，能少用就少用把。 （3）标签内使用 也常用 二、清除事件 （1）方式一 （2）..."}],["meta",{"property":"og:type","content":"website"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-05-26T05:21:52.000Z"}],["meta",{"property":"article:tag","content":"web"}],["meta",{"property":"article:tag","content":"JavaScript"}],["meta",{"property":"article:modified_time","content":"2025-05-26T05:21:52.000Z"}]]},"git":{"createdTime":1725555447000,"updatedTime":1748236912000,"contributors":[{"name":"talentestors","username":"talentestors","email":"talentestors@gmail.com","commits":2,"url":"https://github.com/talentestors"}]},"readingTime":{"minutes":2.85,"words":854},"filePathRelative":"codenotes/web/javascript/事件.md","autoDesc":true}');export{r as comp,d as data};
